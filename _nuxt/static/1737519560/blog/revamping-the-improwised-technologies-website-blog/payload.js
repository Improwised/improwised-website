__NUXT_JSONP__("/blog/revamping-the-improwised-technologies-website-blog", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C){return {data:[{blog:{id:p,status:q,sort:p,date_created:"2022-11-23T10:03:04.431Z",date_updated:"2024-05-29T07:47:49.553Z",title:x,description:"\u003Cp\u003EAt Improwised Technologies, we believe in innovation and forward-thinking that lead to improvement and optimization. We strive to provide our customers with the most efficient and effective web solutions. So we set upon a humble journey to optimize and improve the process of our website.\u003C\u002Fp\u003E",seo_title:x,seo_description:"Discover how Improwised Technologies revamped the website to achieve the perfect blend of dynamic and static content.",content:"\u003Cp\u003E\u003Cstrong\u003EWhy we needed a website revamp?&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EAs an evolving organization, it became the need of the hour to empower teams with flexibility and independence. We wanted to give each team the freedom to manage the needs of their departmental content.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EHowever, we didnâ€™t want to let go of the benefits of a static website like reliability, cost-effectiveness, ease of maintenance, and much better SEO.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003ETo achieve the best of both worlds for the new website, we decided to use our forte of creating a tailor-made solution.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EA sneak into our tailor-made website solution&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002F_nuxt\u002Fimage\u002Ff5e096.png\" alt=\"Website Redesign.drawio\" width=\"800\" height=\"708\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EFirst of all, we decided to go with a content management system that is powerful and flexible that makes it easy for teams to manage content and keep it up to date.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EWhat made us choose the Directus CMS?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EAfter evaluating Strapi, Ghost &amp; Directus, we finalized to go with Directus as it fulfills the majority of our requirements. With its intuitive user interface, robust schema, and easy deployment process, teams can quickly and easily update content and keep their users informed.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EIt also allows teams to track changes to the content and view the content in a rich UI that helps users make more informed decisions.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EAll of the content created in Directus is powered by a secure REST API, meaning anything can be synced with our website or apps.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EThe core of all content management is the schema, after defining a customized schema we can add content.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002F_nuxt\u002Fimage\u002F895178.png\" alt=\"Content Screenshot\" width=\"600\" height=\"590\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EFinally, \u003C\u002Fspan\u003E\u003Cspan style=\"font-weight: 400;\"\u003Eby using this method, teams can easily roll out content without being concerned about the intricacies of the deployment process with a few clicks.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EWhy did a need to establish a review system arise?&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EAdministrators have granted individual teams access to their schemas. Communication and teamwork will be improved as a result. Administrative team members are able to manage their roles and responsibilities.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EAlso, websites earlier did not have anything like CI\u002FCD (Continuous Integration\u002FContinuous Deployment), so if anything was pushed to master that would serve directly without any review system. So many times it added to the work of a developer.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"javascript\" data-pm-slice=\"1 1 []\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003E# This is a basic workflow that is manually triggered\n\nname: staging\n\n# Controls when the action will run. Workflow runs when manually triggered using the UI\n# or API.\non:\n  workflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    defaults:\n      run:\n        shell: bash\n        working-directory: app\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n    - uses: actions\u002Fcheckout@v2\n    # Runs a single command using the runners shell\n    - name: install node_modules\n      run: npm install\n    - name: copy env\n      run: cp .env.staging .env\n    - name: webpack build\n      run: npm run webpack:build\n    - name: static generate\n      run: npm run generate\n    - name: Deploy\n      uses: peaceiris\u002Factions-gh-pages@v3\n      with:\n        personal_token: ${{ secrets.PERSONAL_TOKEN }}\n        publish_dir: .\u002Fapp\u002Fpublic\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EIt led to an increased need to check for typos as well which is sometimes counterinitiative. So a need for a staging mechanism to verify all the content before those changes were made live and to add accountability for the content which is a much-needed request as the organization grows.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003ESo there you have it! After verification, production GitHub Action would be triggered manually, it would transfer the latest build to a public GitHub repository. From there, Cloudflare provides a secure connection and GitHub Pages host the website.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"javascript\" data-pm-slice=\"1 1 []\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003E# This is a basic workflow that is manually triggered\n\nname: production\n\n# Controls when the action will run. Workflow runs when manually triggered using the UI\n# or API.\non:\n  workflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    defaults:\n      run:\n        shell: bash\n        working-directory: app\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n    - uses: actions\u002Fcheckout@v2\n    # Runs a single command using the runners shell\n    - name: install node_modules\n      run: npm install\n    - name: copy env\n      run: cp .env.production .env\n    - name: webpack build\n      run: npm run webpack:build\n    - name: static generate\n      run: npm run generate\n    - name: update CNAME\n      run: echo \"www.improwised.com\" &gt; public\u002FCNAME\n    - name: Deploy\n      uses: peaceiris\u002Factions-gh-pages@v3\n      with:\n        personal_token: ${{ secrets.PERSONAL_TOKEN }}\n        external_repository: improwised\u002Fwebsite\n        publish_dir: .\u002Fapp\u002Fpublic\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Cp\u003E\u003Cstrong\u003EHow we achieved the perfect blend of a dynamic and static website?&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EIn order to achieve a fully static website, we served assets from the repo in addition to using the API link in the src attribute. To accomplish this, custom logic was returned in async data. This logic was responsible for downloading assets from the API and saving them in the static folder when the Nuxt.js generate command was run.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EBy doing this, we were able to preserve the benefits of static websites, such as faster load times and ease of maintenance.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EThe Nuxt.js framework, supported by vue &amp; Directus API, is used to create the static website. Assets were consciously organized into categories based on how frequently they changed while the old theme was transferred to the new nuxt.js framework.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EAssets with frequent changes went into Directus, while those that are permanently untouched status stay in the repo. For instance, the company address, technology stack, and logo.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"javascript\" data-pm-slice=\"1 1 []\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003E&lt;template&gt;\n  &lt;div class=\"main-container about-us\"&gt;\n    &lt;section class=\"text-center heroUnit\"&gt;\n      &lt;div class=\"container\"&gt;\n        &lt;div class=\"row\"&gt;\n          &lt;div class=\"col-sm-10 col-md-8\"&gt;\n            &lt;h1 class=\"\"&gt;Our Story&lt;\u002Fh1&gt;\n            &lt;Breadcrumb class=\"m-0\" \u002F&gt;\n          &lt;\u002Fdiv&gt;\n        &lt;\u002Fdiv&gt;\n        &lt;!--end of row--&gt;\n      &lt;\u002Fdiv&gt;\n      &lt;!--end of container--&gt;\n    &lt;\u002Fsection&gt;\n    &lt;section v-if=\"aboutUs\" class=\"text-center\"&gt;\n      &lt;div class=\"container\"&gt;\n        &lt;div class=\"row\"&gt;\n          &lt;div\n            class=\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 text-left lead\"\n            v-html=\"aboutUs.content\"\n          &gt;&lt;\u002Fdiv&gt;\n        &lt;\u002Fdiv&gt;\n        &lt;!--end of row--&gt;\n      &lt;\u002Fdiv&gt;\n      &lt;!--end of container--&gt;\n    &lt;\u002Fsection&gt;\n  &lt;\u002Fdiv&gt;\n&lt;\u002Ftemplate&gt;\n\n&lt;script&gt;\nimport Breadcrumb from \"@\u002Fcomponents\u002Fbreadcrumb.vue\";\nexport default {\n  components: {\n    Breadcrumb,\n  },\n  layout: \"theme\",\n  async asyncData({ app, params }) {\n    const aboutUs = await app.$axios.$get(app.$urls.aboutUs);\n    return {\n      aboutUs: aboutUs.data\n    };\n  }\n};\n&lt;\u002Fscript&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EWe hope you like the new website and that it offers you a great experience. We strived to make our website more user-friendly and reliable.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E",slug:"revamping-the-improwised-technologies-website-blog",user_created:{id:"a8418846-5723-4563-86df-99615438090f",first_name:"Mansi",last_name:"Pancholi",email:"mansi@improwised.com",password:c,location:a,title:a,description:a,tags:a,avatar:"86701c80-2aba-48e2-90c1-d47cda4fdcd3",language:"en-US",tfa_secret:a,status:d,role:e,token:a,last_access:"2024-07-23T08:33:31.218Z",last_page:"\u002Fcontent\u002Fteam",provider:f,external_identifier:a,auth_data:a,email_notifications:g,appearance:a,theme_dark:a,theme_light:a,theme_light_overrides:a,theme_dark_overrides:a},user_updated:{id:b,first_name:h,last_name:i,email:j,password:c,location:a,title:k,description:a,tags:a,avatar:l,language:a,tfa_secret:a,status:d,role:e,token:a,last_access:m,last_page:n,provider:f,external_identifier:a,auth_data:a,email_notifications:g,appearance:a,theme_dark:a,theme_light:a,theme_light_overrides:a,theme_dark_overrides:a},image:{id:"950824db-f908-420a-ae48-ce3785513695",storage:r,filename_disk:"950824db-f908-420a-ae48-ce3785513695.png",filename_download:"code-refactoring-icon-vector-image-can-be-used-mobile-app-development_120816-273070-removebg-preview.png",title:"Code Refactoring Icon Vector Image Can Be Used Mobile App Development 120816 273070 Removebg Preview",type:s,folder:t,uploaded_by:b,created_on:y,modified_by:a,modified_on:"2024-05-29T07:47:41.548Z",charset:a,filesize:"88455",width:z,height:z,duration:a,embed:a,description:a,location:a,tags:a,metadata:{},focal_point_x:a,focal_point_y:a,tus_id:a,tus_data:a,uploaded_on:y},tags:[{id:u,blog_id:p,tags_id:{name:"Optimization"}}]},blogList:[{id:u,status:q,sort:a,date_created:"2025-01-22T04:14:14.143Z",date_updated:"2025-01-22T04:17:00.978Z",title:A,description:"\u003Cp\u003EThe DevOps Research and Assessment (DORA) metrics provide a framework for evaluating the performance of software delivery and operational capabilities. This document explores the significance of tooling and infrastructure in accurately measuring DORA metrics, focusing on the technical aspects and implications of these measurements\u003C\u002Fp\u003E",seo_title:A,seo_description:"The DevOps Research and Assessment (DORA) metrics provide a framework for evaluating the performance of software delivery and operational capabilities. ",content:"\u003Cp dir=\"ltr\"\u003EThe discussion will delve into the specific tools and infrastructure components that facilitate the collection, analysis, and reporting of DORA metrics, as well as the challenges associated with their implementation.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cimg src=\"https:\u002F\u002Flh7-rt.googleusercontent.com\u002Fdocsz\u002FAD_4nXczwwTolR9e4H980-GXIjHs9E4c_Q-jdLd-7D3gNywdwUFivyWTp0VT6Asoo_jLpcz7b3o4gjnhVN7g_LnPCwRve6XyZN_6a5tj11F1nb5gevw2ga9uAX-GfAf3hLqsCiQsDxzy?key=UatMd6qQFWASHCw9BTaqXc7z\" width=\"auto\" height=\"auto\"\u003E\u003C\u002Fp\u003E\n\u003Ch1 dir=\"ltr\"\u003EUnderstanding DORA Metrics\u003C\u002Fh1\u003E\n\u003Cp dir=\"ltr\"\u003EDORA metrics consist of four key performance indicators: deployment frequency, lead time for changes, mean time to restore (MTTR), and change failure rate. Each metric serves a distinct purpose in assessing the efficiency and effectiveness of software delivery processes.\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli dir=\"ltr\" aria-level=\"1\"\u003E\n\u003Cp dir=\"ltr\" role=\"presentation\"\u003EDeployment Frequency: This metric quantifies the number of deployments to production within a specified timeframe. It reflects the team's ability to deliver changes to users.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\" aria-level=\"1\"\u003E\n\u003Cp dir=\"ltr\" role=\"presentation\"\u003ELead Time for Changes: This metric measures the time taken from code commit to deployment in production. It indicates the efficiency of the development process.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Col start=\"3\"\u003E\n\u003Cli dir=\"ltr\" aria-level=\"1\"\u003E\n\u003Cp dir=\"ltr\" role=\"presentation\"\u003EMean Time to Restore (MTTR): This metric calculates the average time taken to recover from a failure in production. It assesses the team's responsiveness to incidents.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Col start=\"4\"\u003E\n\u003Cli dir=\"ltr\" aria-level=\"1\"\u003E\n\u003Cp dir=\"ltr\" role=\"presentation\"\u003EChange Failure Rate: This metric represents the percentage of deployments that result in a failure. It evaluates the stability of the deployment process.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch1 dir=\"ltr\"\u003ETooling for DORA Metrics\u003C\u002Fh1\u003E\n\u003Cp dir=\"ltr\"\u003EThe measurement of DORA metrics requires a combination of tools that facilitate data collection, analysis, and visualization. The following categories of tools are essential for effective measurement:\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003EVersion Control Systems\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003EVersion control systems (VCS) such as Git play a crucial role in tracking code changes. They provide data necessary for calculating lead time for changes and deployment frequency. By analyzing commit history and deployment logs, teams can derive insights into their development cycles.\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003EContinuous Integration\u002FContinuous Deployment (CI\u002FCD) Tools\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003ECI\u002FCD tools automate the process of building, testing, and deploying applications. Tools like Jenkins, GitLab CI, and CircleCI enable teams to monitor deployment frequency and lead time for changes. These tools generate logs that can be analyzed to determine the time taken for each stage of the deployment pipeline.\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003EIncident Management Tools\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003EIncident management tools such as PagerDuty and Opsgenie are vital for measuring MTTR and change failure rate. These tools track incidents, allowing teams to log the time taken to resolve issues. By integrating incident management with deployment tools, teams can correlate deployments with incidents, providing a clearer picture of change failure rates.\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003EMonitoring and Observability Tools\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003EMonitoring tools like Prometheus, Grafana, and New Relic provide insights into application performance and system health. These tools enable teams to detect failures and assess the impact of deployments on system stability. By analyzing metrics collected from these tools, teams can calculate MTTR and change failure rates.\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003EAnalytics and Reporting Tools\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003EAnalytics tools such as Google Analytics or custom dashboards built with tools like Tableau or Power BI can aggregate data from various sources. These tools allow teams to visualize DORA metrics over time, facilitating trend analysis and performance evaluation.\u003C\u002Fp\u003E\n\u003Ch1 dir=\"ltr\"\u003EInfrastructure Considerations\u003C\u002Fh1\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cimg src=\"https:\u002F\u002Flh7-rt.googleusercontent.com\u002Fdocsz\u002FAD_4nXdkSP-1Nw8AqLFyabt88HnoZN5e8rzJIUFK7u4wwUDlBTaFlzm9GNtdBge8dRyvz2KgKbtAjt_ahh9q9BDynd3A3eJpodz2Wv-TZyC8BWYBIql_xtGBoiwCSA2wD03C7hAo67SthA?key=UatMd6qQFWASHCw9BTaqXc7z\" width=\"auto\" height=\"auto\"\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EThe infrastructure supporting the tooling is equally important in measuring DORA metrics. The following aspects should be considered:\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003ECloud Infrastructure\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003ECloud platforms such as AWS, Azure, and Google Cloud provide scalable environments for deploying applications. The use of cloud infrastructure can impact deployment frequency and lead time for changes. Teams must ensure that their cloud environments are configured for rapid deployment and recovery.\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003EContainerization\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003EContainerization technologies like Docker and orchestration tools like Kubernetes enable teams to deploy applications consistently across environments. These technologies can reduce lead time for changes and improve deployment frequency by simplifying the deployment process.\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003EConfiguration Management\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003EConfiguration management tools such as Ansible, Puppet, and Chef automate the provisioning and management of infrastructure. These tools ensure that environments are consistent and can be quickly restored in case of failure, thereby impacting MTTR.\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003ENetwork Infrastructure\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003EThe network infrastructure must support the rapid deployment of applications. Latency and bandwidth can affect the speed of deployments and the ability to restore services after a failure. Teams should monitor network performance as part of their DORA metric analysis.\u003C\u002Fp\u003E\n\u003Ch1 dir=\"ltr\"\u003EChallenges in Measuring DORA Metrics\u003C\u002Fh1\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cimg src=\"https:\u002F\u002Fdata.improwised.com\u002Fassets\u002Fbbcb59a7-d0fd-456d-af4d-741aaeb5c476.png?width=auto&amp;height=auto\" alt=\"Screenshot From 2025 01 21 17 39 15\"\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EWhile tooling and infrastructure are critical for measuring DORA metrics, several challenges can arise:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EData Silos: Data silos occur when information is isolated within different tools or teams. This fragmentation can hinder the ability to collect comprehensive data for DORA metrics. Integrating tools and ensuring data flows between them is essential for accurate measurement.\u003C\u002Fp\u003E\n\u003Cp\u003EInconsistent Data: Inconsistent data can arise from manual processes or poorly configured tools. Ensuring that all tools are correctly set up to capture relevant data is necessary for reliable metric calculation.\u003C\u002Fp\u003E\n\u003Cp\u003ECultural Resistance: Cultural resistance to adopting new tools or processes can impede the measurement of DORA metrics. Teams must foster a culture of continuous improvement and data-driven decision-making to overcome this challenge.\u003C\u002Fp\u003E\n\u003Cp\u003ETool Overhead: The integration of multiple tools can introduce complexity and overhead. Teams must balance the benefits of detailed measurement with the operational burden of managing numerous tools.\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003EConsequences of Insufficient Tooling and Infrastructure\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EPoor data quality can severely impact organizational performance. Inaccurate conclusions drawn from flawed data lead to misaligned priorities and ineffective process improvements. Incomplete metrics hinder the identification of bottlenecks and inefficiencies, prolonging delivery cycles and increasing costs. The inability to measure and address change failure rates and recovery times can lead to higher system downtime, eroding user trust. Insufficient integration across tools and infrastructure limits the ability to automate key processes, resulting in higher manual effort and increased error rates.\u003C\u002Fp\u003E\n\u003Ch1 dir=\"ltr\"\u003EConclusion\u003C\u002Fh1\u003E\n\u003Cp dir=\"ltr\"\u003EThe measurement of DORA metrics is contingent upon the effective use of tooling and infrastructure. Each component plays a vital role in collecting and analyzing data necessary for evaluating software delivery performance. However, challenges such as data silos, inconsistent data, cultural resistance, and tool overhead can hinder accurate measurement.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EOrganizations must address these challenges to ensure that their tooling and infrastructure support the effective measurement of DORA metrics. Failure to do so may result in an incomplete understanding of software delivery performance, leading to suboptimal decision-making and potential degradation of service quality. The consequences of neglecting these aspects can manifest in increased lead times, higher change failure rates, and prolonged recovery times, ultimately impacting the organization's ability to deliver value to its users.\u003C\u002Fp\u003E",slug:"tooling-and-infrastructure-in-measuring-dora-metrics",user_created:{id:b,first_name:h,last_name:i,email:j,password:c,location:a,title:k,description:a,tags:a,avatar:l,language:a,tfa_secret:a,status:d,role:e,token:a,last_access:m,last_page:n,provider:f,external_identifier:a,auth_data:a,email_notifications:g,appearance:a,theme_dark:a,theme_light:a,theme_light_overrides:a,theme_dark_overrides:a},user_updated:{id:b,first_name:h,last_name:i,email:j,password:c,location:a,title:k,description:a,tags:a,avatar:l,language:a,tfa_secret:a,status:d,role:e,token:a,last_access:m,last_page:n,provider:f,external_identifier:a,auth_data:a,email_notifications:g,appearance:a,theme_dark:a,theme_light:a,theme_light_overrides:a,theme_dark_overrides:a},image:{id:"22d01ddc-d91a-4efa-9d05-6ea884020ac6",storage:r,filename_disk:"22d01ddc-d91a-4efa-9d05-6ea884020ac6.png",filename_download:"Untitled design (1).png",title:"Untitled Design (1)",type:s,folder:t,uploaded_by:b,created_on:"2025-01-22T04:13:25.273Z",modified_by:a,modified_on:"2025-01-22T04:13:25.634Z",charset:a,filesize:"131415",width:o,height:o,duration:a,embed:a,description:a,location:a,tags:a,metadata:{},focal_point_x:a,focal_point_y:a,tus_id:a,tus_data:a,uploaded_on:"2025-01-22T04:13:25.631Z"},tags:[{id:37,blog_id:u,tags_id:14}]},{id:v,status:q,sort:17,date_created:"2025-01-10T05:54:53.222Z",date_updated:"2025-01-10T12:12:02.448Z",title:B,description:"\u003Cp dir=\"ltr\"\u003EManaging ingress traffic in a Kubernetes cluster is a critical aspect of ensuring the accessibility and security of your applications. This guide will walk you through the process of deploying a Traefik cluster on Kuberntes, including the setup of automatic TLS using Let's Encrypt.\u003C\u002Fp\u003E",seo_title:B,seo_description:"Managing ingress traffic in a Kubernetes cluster is a critical aspect of ensuring the accessibility and security of your applications. This guide will walk you through the process of deploying a Traefik cluster on Kuberntes, including the setup of automatic TLS using Let's Encrypt.",content:"\u003Ch3 dir=\"ltr\"\u003EPrerequisites\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EBefore proceeding, ensure you have the following:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\" aria-level=\"1\"\u003E\n\u003Cp dir=\"ltr\" role=\"presentation\"\u003EEnsure you have a Kubernetes cluster set up.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\" aria-level=\"1\"\u003E\n\u003Cp dir=\"ltr\" role=\"presentation\"\u003EInstall Helm for package management.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\" aria-level=\"1\"\u003E\n\u003Cp dir=\"ltr\" role=\"presentation\"\u003EHave a domain name that resolves to the public IP of your Kubernetes cluster.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cimg src=\"https:\u002F\u002Fdata.improwised.com\u002Fassets\u002Fa4f063d8-c3a5-4625-8617-41c37c2092e4.png?width=auto&amp;height=auto\" alt=\"Traefik (2)\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003ESetting Up the Kubernetes Cluster\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003EIf you don't already have a Kubernetes cluster, you can set one up using your preferred method (e.g., using Minikube, kind, or any other Kubernetes distribution).\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003EInstalling Helm\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003ETo manage packages in your Kubernetes cluster, you need Helm. Here&rsquo;s how to install it:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Ecurl -fsSL -o get_helm.sh https:\u002F\u002Fraw.githubusercontent.com\u002Fhelm\u002Fhelm\u002Fmaster\u002Fscripts\u002Fget-helm-3\nchmod 700 get_helm.sh\n.\u002Fget_helm.sh\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 dir=\"ltr\"\u003EInstalling Traefik via Helm\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003ETo install Traefik using Helm, you need to configure the traefik-values.yaml file. Here is an example configuration that includes Let's Encrypt for automatic TLS:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# traefik-values.yaml\n\nlogs:\n  general:\n    level: DEBUG\n\nservice:\n  type: LoadBalancer\n\npersistence:\n  enabled: true\n\ncertificatesResolvers:\n  letsencrypt:\n    acme:\n      email: \"your@email.com\" \n      storage: \"traefik-acme.json\"\n      keyType: \"RSA4096\"\n      tlsChallenge: {}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp dir=\"ltr\"\u003EYou can override the\u003Ca href=\"http:\u002F\u002Facme.email\"\u003E acme.email\u003C\u002Fa\u003E field directly in the helm install command if needed:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Ehelm repo add traefik https:\u002F\u002Fhelm.traefik.io\u002Ftraefik\nhelm repo update\nhelm install traefik traefik\u002Ftraefik --set acme.email=your@email.com\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 dir=\"ltr\"\u003EConfiguring DNS for Traefik\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EAfter installing Traefik, you need to set up a DNS name for the public IP of the Traefik controller.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# Get the public IP of the Traefik service\nPUBLIC_IP=$(kubectl get svc traefik -n kube-system -o jsonpath='{.status.loadBalancer.ingress.hostname}')\n\n# Update the DNS name for the public IP\nDNSNAME=$(az network public-ip show --ids $(kubectl get svc traefik -n kube-system -o jsonpath='{.status.loadBalancer.ingress.hostname}' | cut -d '.' -f 1) --query dnsSettings.fqdn -o tsv)\necho \"DNSNAME: $DNSNAME\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 dir=\"ltr\"\u003EDeploying a Sample Application\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003ETo demonstrate the functionality of Traefik, you can deploy a sample application. Here is an example of how to deploy the azure-vote-app:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# azure-vote-app.yaml\n\napiVersion: apps\u002Fv1\nkind: Deployment\nmetadata:\n  name: azure-vote-back\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: azure-vote-back\n  template:\n    metadata:\n      labels:\n        app: azure-vote-back\n    spec:\n      containers:\n      - name: azure-vote-back\n        image: mcr.microsoft.com\u002Foss\u002Fnginx\u002Fnginx:1.15.5-alpine\n        ports:\n        - containerPort: 80\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: azure-vote-back\nspec:\n  selector:\n    app: azure-vote-back\n  ports:\n  - name: http\n    port: 80\n    targetPort: 80\n  type: ClusterIP\n\n---\napiVersion: apps\u002Fv1\nkind: Deployment\nmetadata:\n  name: azure-vote-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: azure-vote-front\n  template:\n    metadata:\n      labels:\n        app: azure-vote-front\n    spec:\n      containers:\n      - name: azure-vote-front\n        image: mcr.microsoft.com\u002Foss\u002Fnginx\u002Fnginx:1.15.5-alpine\n        ports:\n        - containerPort: 80\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: azure-vote-front\nspec:\n  selector:\n    app: azure-vote-front\n  ports:\n  - name: http\n    port: 80\n    targetPort: 80\n  type: ClusterIP\n\n---\napiVersion: networking.k8s.io\u002Fv1\nkind: Ingress\nmetadata:\n  name: azure-vote-ingress\n  annotations:\n    traefik.ingress.kubernetes.io\u002Frouter.tls.certresolver: letsencrypt\n    traefik.ingress.kubernetes.io\u002Frouter.entrypoints: websecure\nspec:\n  rules:\n  - host: ${DNSNAME}\n    http:\n      paths:\n      - path: \u002F\n        pathType: Exact\n        backend:\n          service:\n            name: azure-vote-front\n            port:\n              number: 80\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp dir=\"ltr\"\u003EUpdate the host field in the Ingress resource to match your Traefik public IP FQDN:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Esed -i \"s\u002Fhost: &lt;DNSNAME&gt;.&lt;LOCATION&gt;.cloudapp.azure.com\u002Fhost: ${DNSNAME}\u002Fg\" azure-vote-app.yaml\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp dir=\"ltr\"\u003EThen, apply the configuration:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Ekubectl create ns azure-vote\nkubectl apply -f azure-vote-app.yaml -n azure-vote\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 dir=\"ltr\"\u003EUsing IngressRoute CRD\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003ETraefik also supports the IngressRoute CRD for more advanced routing configurations. Here is an example of how to use it:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# azure-vote-ingressroute.yaml\n\napiVersion: traefik.io\u002Fv1alpha1\nkind: IngressRoute\nmetadata:\n  name: azure-vote-ingressroute\nspec:\n  entryPoints:\n    - websecure\n  routes:\n    - match: Host(`${DNSNAME}`)\n      kind: Rule\n      services:\n        - name: azure-vote-front\n          port: 80\n  tls:\n    certResolver: letsencrypt\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp dir=\"ltr\"\u003EApply the IngressRoute configuration:\u003C\u002Fp\u003E\n\u003Cdiv dir=\"ltr\" align=\"left\"\u003E\n\u003Cpre\u003E\u003Ccode\u003Ekubectl apply -f azure-vote-ingressroute.yaml -n azure-vote\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 dir=\"ltr\"\u003EMiddleware Configuration\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EYou can also configure middleware using Traefik's CRDs. Here is an example of how to set up a middleware to add security headers:\u003C\u002Fp\u003E\n\u003Cdiv dir=\"ltr\" align=\"left\"\u003E\n\u003Cpre\u003E\u003Ccode\u003E# azure-vote-middleware.yaml\n\napiVersion: traefik.io\u002Fv1alpha1\nkind: Middleware\nmetadata:\n  name: test-header\nspec:\n  headers:\n    frameDeny: true\n    browserXssFilter: true\nApply the middleware configuration:\nkubectl apply -f azure-vote-middleware.yaml -n azure-vote\nThen, reference the middleware in your IngressRoute:\n# Updated azure-vote-ingressroute.yaml\n\napiVersion: traefik.io\u002Fv1alpha1\nkind: IngressRoute\nmetadata:\n  name: azure-vote-ingressroute\nspec:\n  entryPoints:\n    - websecure\n  routes:\n    - match: Host(`${DNSNAME}`)\n      kind: Rule\n      middlewares:\n        - name: test-header\n      services:\n        - name: azure-vote-front\n          port: 80\n  tls:\n    certResolver: letsencrypt\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cstrong\u003E&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EWhen considering high availability in a setup involving multiple instances of Traefik with Let's Encrypt, it is important to note that Let's Encrypt itself does not inherently provide high availability solutions. However, Let's Encrypt does offer robust security features for obtaining and managing TLS certificates.\u003C\u002Fp\u003E\n\u003Ch2 dir=\"ltr\"\u003ELimitations with Traefik and Let's Encrypt\u003C\u002Fh2\u003E\n\u003Cp dir=\"ltr\"\u003EUsing multiple instances of Traefik with Let's Encrypt can be challenging due to the nature of the ACME challenge. Each Traefik instance may attempt to renew the certificate independently, leading to conflicts and overwriting of certificates.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EHere are some recommended approaches to address this issue:\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E1. Centralized Storage with Shared File System\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EUse a shared file system (e.g., NFS, Ceph, or AWS EFS) that is accessible to all Traefik instances.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EConfigure Traefik to use the shared file system as the storage backend for ACME certificates by specifying the acme.json file location.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EExample configuration in traefik.yml:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003EcertificatesResolvers:\n  letsEncrypt:\n    acme:\n      email: \"your-email@example.com\"\n      storage: \"\u002Fshared\u002Facme.json\"\n      httpChallenge:\n        entryPoint: \"web\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cstrong\u003E&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E2. Use a Distributed Key-Value Store\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003ETraefik supports using distributed key-value stores like Consul, Etcd, or Redis to store ACME certificates.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EThis ensures that all instances have consistent access to certificate data and can avoid conflicts.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EExample configuration for Consul:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003EcertificatesResolvers:\n  letsEncrypt:\n    acme:\n      email: \"your-email@example.com\"\n      storage: \"traefik\u002Facme\u002Faccount\"\n      httpChallenge:\n        entryPoint: \"web\"\nproviders:\n  consul:\n    endpoints:\n      - \"127.0.0.1:8500\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 dir=\"ltr\"\u003E3. Avoid Simultaneous Renewal Attempts\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EUse a leader-election mechanism (e.g., Kubernetes leader-election or a similar process in other environments) to designate a single Traefik instance as the one responsible for certificate renewal.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003ENon-leader instances can still use the certificates but do not attempt renewal.\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E4. DNS Challenge for Cert Management\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EConsider using the DNS challenge for certificate validation, especially in a multi-instance setup. This approach is stateless and avoids potential conflicts during HTTP challenges.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EExample DNS challenge configuration:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003EcertificatesResolvers:\n  letsEncrypt:\n    acme:\n      email: \"your-email@example.com\"\n      storage: \"\u002Fshared\u002Facme.json\"\n      dnsChallenge:\n        provider: \"cloudflare\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp dir=\"ltr\"\u003EBy implementing one or more of these strategies, you can ensure smooth certificate management across multiple Traefik instances and avoid the challenges associated with Let's Encrypt's ACME protocol.\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003EConclusion\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EDeploying Traefik as an ingress controller on Kubernetes with automatic TLS using Let's Encrypt or Cert-Manager simplifies the management of ingress traffic and improves the security of your applications. By following the steps outlined in this guide, you can set up a robust and scalable ingress solution that meets the demands of your Kubernetes workloads.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E",slug:"simplifying-ingress-management-for-kubernetes",user_created:{id:b,first_name:h,last_name:i,email:j,password:c,location:a,title:k,description:a,tags:a,avatar:l,language:a,tfa_secret:a,status:d,role:e,token:a,last_access:m,last_page:n,provider:f,external_identifier:a,auth_data:a,email_notifications:g,appearance:a,theme_dark:a,theme_light:a,theme_light_overrides:a,theme_dark_overrides:a},user_updated:{id:b,first_name:h,last_name:i,email:j,password:c,location:a,title:k,description:a,tags:a,avatar:l,language:a,tfa_secret:a,status:d,role:e,token:a,last_access:m,last_page:n,provider:f,external_identifier:a,auth_data:a,email_notifications:g,appearance:a,theme_dark:a,theme_light:a,theme_light_overrides:a,theme_dark_overrides:a},image:{id:"848b119e-0969-4831-b652-2b90987580a6",storage:r,filename_disk:"848b119e-0969-4831-b652-2b90987580a6.png",filename_download:"tls traefik-min.png",title:"TLS Traefik Min",type:s,folder:t,uploaded_by:b,created_on:"2025-01-10T12:03:08.143Z",modified_by:a,modified_on:"2025-01-10T12:03:10.127Z",charset:a,filesize:"992278",width:o,height:o,duration:a,embed:a,description:a,location:a,tags:a,metadata:{},focal_point_x:a,focal_point_y:a,tus_id:a,tus_data:a,uploaded_on:"2025-01-10T12:03:10.120Z"},tags:[{id:35,blog_id:v,tags_id:12},{id:36,blog_id:v,tags_id:13}]},{id:w,status:q,sort:16,date_created:"2025-01-02T11:13:25.490Z",date_updated:"2025-01-02T11:24:32.150Z",title:C,description:"\u003Cp\u003ESeveral major developments will take center stage as 2025 approaches, greatly influencing platform engineering teams. Advances in technologies like artificial intelligence (AI), automation, serverless architectures, and changing business requirements related to cost management, security, and data protection are driving these trends.\u003C\u002Fp\u003E",seo_title:C,seo_description:"Several major developments will take center stage as 2025 approaches, greatly influencing platform engineering teams. ",content:"\u003Cp dir=\"ltr\"\u003EThis blog will look at these emerging patterns, their implications for platform engineers, and the tactics required to adjust to them.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cimg src=\"https:\u002F\u002Flh7-rt.googleusercontent.com\u002Fdocsz\u002FAD_4nXfes_j_vdmmp7tgA-Bvs5qmWgBcjsAy7N5cxy8i-1HjcJR78YJF5zrNVIHFsbhkqs7-0_57Szp7yCQ0a6y6AOrgyO1CJqq5oOcM17WuufZN_R9_NuMQj6UH41-NtSHi4udkTLqYHg?key=0hzSa89ZDtmdX9DaLgLnjCG5\" width=\"auto\" height=\"auto\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E1. Multicloud Architectures' Ascension\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EMulticloud strategies, where organizations use multiple cloud providers for different workloads, are set to become the norm. Companies are increasingly avoiding lock-in to a single cloud provider, aiming to enhance flexibility, cost efficiency, and redundancy.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EGartner predicts that by 2025, 70% of enterprises will use multicloud or hybrid cloud environments for mission-critical applications.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EFor platform engineers, the challenge lies in managing multiple cloud environments and ensuring seamless integration between them. Engineers must optimize cloud resource management to avoid complexity, reduce operational overhead, and meet compliance standards. Key tools such as Kubernetes and Terraform will continue to gain traction, offering automation for cross-cloud orchestration.\u003Cbr\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E2. Serverless Computing Adoption\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EServerless computing, or Function as a Service (FaaS), is shifting the cloud computing paradigm by allowing developers to focus on business logic without managing infrastructure. As cloud providers refine their serverless offerings, platform engineers will need to focus on optimizing workloads and ensuring high availability.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EResearch by MarketsandMarkets forecasts the serverless computing market to grow from $18.4 billion in 2023 to $44.7 billion by 2029, representing a compound annual growth rate (CAGR) of 25.5%. (source - https:\u002F\u002Fwww.marketsandmarkets.com\u002FMarket-Reports)\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\" aria-level=\"1\"\u003E\n\u003Cp dir=\"ltr\" role=\"presentation\"\u003E41% of enterprises reported using serverless technologies in their production environments in 2023 (State of Cloud Native Development 2023, CNCF).\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003EPlatform engineers will need to focus on ensuring observability and performance monitoring for serverless functions. While serverless offers significant cost savings and operational efficiency, it can also lead to challenges with latency, debugging, and managing cold starts. Engineers will need to implement tooling for better error tracking and performance analysis, as well as understand how serverless fits into the larger architecture alongside other cloud services.\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E3. Green Cloud Practices\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EAs organizations increasingly prioritize sustainability, green cloud practices are becoming more critical.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EPlatform engineers need to ensure that their cloud architectures are designed with energy efficiency and environmental sustainability in mind. This involves selecting cloud service providers that use renewable energy sources, optimizing resource usage to minimize waste, and implementing strategies to reduce the carbon footprint of cloud operations.\u003Cbr\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E4. Development of AI and Machine Learning Infrastructure\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EArtificial Intelligence (AI) and Machine Learning (ML) workloads are increasing in prominence, pushing the need for specialized infrastructure. Cloud providers are developing more tailored services for ML and AI, including high-performance GPUs and TPUs, distributed machine learning platforms, and dedicated hardware accelerators.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EPlatform engineers will need to ensure that cloud architectures are optimized for ML and AI models. This includes designing systems that support scalable and cost-effective GPU clusters, handling data pipelines efficiently, and maintaining high throughput. Engineers will also need to stay updated on emerging AI\u002FML cloud services like Google AI Platform and AWS SageMaker to ensure optimal resource provisioning and management.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\" aria-level=\"1\"\u003E\n\u003Cp dir=\"ltr\" role=\"presentation\"\u003EThe global cloud Al market is estimated to grow from USD 80.30 billion to USD 327.15 billion by 2029 at a CAGR of 32.4% from 2024 to 2029\u003Cbr\u003E(source - https:\u002F\u002Fwww.marketsandmarkets.com\u002FMarket-Reports)\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E5. Edge Computing Integration\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EEdge computing, which processes data closer to where it is generated rather than sending it to a centralized cloud data center, is gaining significant traction. In 2025, more enterprises will look to integrate edge computing into their cloud strategies, driven by the increasing number of IoT devices and real-time data requirements.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EThe Edge computing market size is expected to grow from USD 60.0 billion in 2024 to USD 110.6 billion by 2029 at a Compound Annual Growth Rate (CAGR) of 13.0% during the forecast period. \u003Cbr\u003E(source - https:\u002F\u002Fwww.marketsandmarkets.com\u002FMarket-Reports)\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EPlatform engineers will need to develop distributed architectures that span both the cloud and edge devices. This involves ensuring secure and reliable connectivity between edge devices and cloud platforms, managing decentralized workloads, and ensuring low-latency data processing. Edge computing will require new approaches to monitoring and debugging, as engineers will be working with dispersed systems and data sources.\u003Cbr\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E6. Cloud-Native Security\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EAs organizations move more critical workloads to the cloud, security has become a paramount concern. In 2025, the focus will shift towards building security into cloud-native environments from the ground up, as opposed to retrofitting traditional security practices.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EPlatform engineers will need to integrate advanced security practices into their cloud-native workflows. This includes using tools like AWS Shield, Google Cloud Armor, and Azure Security Center to ensure protection across cloud environments. Engineers will also focus on implementing practices like zero-trust architecture and adopting automated security posture management tools to prevent configuration errors.\u003Cbr\u003E\u003Cbr\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E7. Cloud Infrastructure as Code (IaC) Maturity\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EInfrastructure as Code (IaC) has already disrupted traditional infrastructure management, and in 2025, IaC tools will be further integrated into the DevOps pipelines. As cloud environments become more complex, IaC will evolve to support more advanced features like real-time validation, automated rollback, and more granular control over resource provisioning.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EFor platform engineers, mastering IaC tools will be critical. Not only will they need to ensure code is scalable and maintainable, but they will also need to adopt best practices around version control, testing, and continuous integration\u002Fcontinuous delivery (CI\u002FCD) pipelines. Automation will help mitigate human error, but engineers will need to continuously update and test their IaC templates to keep up with new cloud features.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EAccording to a 2023 survey by HashiCorp, 69% of enterprises already use IaC in production environments. The number of enterprises adopting Terraform and Ansible is expected to increase by 40% over the next two years.\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E\u003Cbr\u003E8. Polymorphic Containers (and Multi-Cloud Strategies)\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EPlatform engineers will need to manage and integrate applications across multiple cloud providers to avoid vendor lock-in and use the unique strengths of each cloud platform. This involves using tools like OpenTofu to create polymorphic infrastructure as code that can be deployed across different cloud service providers.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EWhile containers offer scalability and portability, overreliance on them can introduce complexities and security concerns. Platform engineers should adopt a balanced approach, using containers where they add value but also leveraging CSP-specific services to avoid unnecessary overhead and security risks.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EBy adopting multi-cloud strategies and using containers judiciously, platform engineers can ensure high availability, fault tolerance, and the ability to scale applications efficiently across different cloud environments.\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003EConclusion\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EAs we look ahead to 2025, cloud computing will continue to evolve at a rapid pace. Platform engineers will play a central role in adapting to these changes, navigating new architectures, and implementing the latest technologies. Whether managing multicloud environments, optimizing for AI\u002FML workloads, or integrating cutting-edge technologies like quantum computing, engineers must focus on automation, security, and scalability.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EBy understanding the trends outlined here, platform engineers can stay ahead of the curve, ensuring that their cloud infrastructure is both resilient and efficient in the face of these emerging challenges.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong id=\"docs-internal-guid-0ff8bd28-7fff-1783-8248-95ee76599b75\"\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E",slug:"top-cloud-trends-to-watch-in-2025",user_created:{id:b,first_name:h,last_name:i,email:j,password:c,location:a,title:k,description:a,tags:a,avatar:l,language:a,tfa_secret:a,status:d,role:e,token:a,last_access:m,last_page:n,provider:f,external_identifier:a,auth_data:a,email_notifications:g,appearance:a,theme_dark:a,theme_light:a,theme_light_overrides:a,theme_dark_overrides:a},user_updated:{id:b,first_name:h,last_name:i,email:j,password:c,location:a,title:k,description:a,tags:a,avatar:l,language:a,tfa_secret:a,status:d,role:e,token:a,last_access:m,last_page:n,provider:f,external_identifier:a,auth_data:a,email_notifications:g,appearance:a,theme_dark:a,theme_light:a,theme_light_overrides:a,theme_dark_overrides:a},image:{id:"d6ed3041-2b1f-4dac-858f-8bfb38cf1a70",storage:r,filename_disk:"d6ed3041-2b1f-4dac-858f-8bfb38cf1a70.png",filename_download:"THINK (2).png",title:"Think (2)",type:s,folder:t,uploaded_by:b,created_on:"2025-01-02T11:23:19.906Z",modified_by:a,modified_on:"2025-01-02T11:23:20.397Z",charset:a,filesize:"195077",width:o,height:o,duration:a,embed:a,description:a,location:a,tags:a,metadata:{},focal_point_x:a,focal_point_y:a,tus_id:a,tus_data:a,uploaded_on:"2025-01-02T11:23:20.385Z"},tags:[{id:33,blog_id:w,tags_id:10},{id:34,blog_id:w,tags_id:p}]}],_img:{"/_ipx/f_png/https://data.improwised.com/assets/1ec9da15-835a-436b-9bbf-3f5fede07d9c":"\u002F_nuxt\u002Fimage\u002Ff5e096.png","/_ipx/f_png/https://data.improwised.com/assets/4ef2b511-7338-436d-96a1-e2fb91625c27":"\u002F_nuxt\u002Fimage\u002F895178.png","/_ipx/_/img/logo.png":"\u002F_nuxt\u002Fimage\u002Fd4c006.png","/_ipx/_/img/fonts/menu.svg":"\u002F_nuxt\u002Fimage\u002Fb7846b.svg","/_ipx/h_400,f_webp/https://data.improwised.com/assets/950824db-f908-420a-ae48-ce3785513695":"\u002F_nuxt\u002Fimage\u002F9d68e3.webp","/_ipx/_/img/fonts/google-blue.svg":"\u002F_nuxt\u002Fimage\u002F342f2b.svg","/_ipx/_/img/fonts/linkedin-blue.svg":"\u002F_nuxt\u002Fimage\u002F23608e.svg","/_ipx/_/img/fonts/twitter-blue.svg":"\u002F_nuxt\u002Fimage\u002F2c1470.svg","/_ipx/_/img/fonts/facebook-blue.svg":"\u002F_nuxt\u002Fimage\u002F36ebdc.svg","/_ipx/_/img/fonts/whatsapp-blue.svg":"\u002F_nuxt\u002Fimage\u002F90c703.svg","/_ipx/s_75x27/img/logo.png":"\u002F_nuxt\u002Fimage\u002F36e495.png","/_ipx/_/img/fonts/facebook.svg":"\u002F_nuxt\u002Fimage\u002F710b89.svg","/_ipx/_/img/fonts/twitter.svg":"\u002F_nuxt\u002Fimage\u002F45ad31.svg","/_ipx/_/img/fonts/linkedin.svg":"\u002F_nuxt\u002Fimage\u002F285706.svg","/_ipx/_/img/fonts/up-open-big.svg":"\u002F_nuxt\u002Fimage\u002F2b0c17.svg","/_ipx/f_webp,h_400/https://data.improwised.com/assets/950824db-f908-420a-ae48-ce3785513695":"\u002F_nuxt\u002Fimage\u002F898227.webp"}}],fetch:{},mutations:[]}}(null,"f6ae4b64-c3c4-4f35-8b41-9f48088de4b1","**********","active","5ef170ac-f2e9-4b93-a9ea-5c54fcf0fa40","default",true,"Angita","Shah","angita.shah@improwised.com","SEO Specialist","20d037d1-41ee-4efd-b034-1350a3ce336d","2025-01-22T04:08:44.953Z","\u002Fcontent\u002Fblog",2380,11,"published","AMZ","image\u002Fpng","46478a01-ff9b-4189-ad30-24734d885007",22,21,20,"Revamping the Improwised Technologies Website","2024-05-29T07:47:41.099Z",500,"The Role of Tooling and Infrastructure in Measuring DORA Metrics","Simplifying Ingress Management for Kubernetes: Deploying a Traefik Cluster with Automatic TLS","Top Cloud Trends to Watch in 2025: Implications for Platform Engineers")));